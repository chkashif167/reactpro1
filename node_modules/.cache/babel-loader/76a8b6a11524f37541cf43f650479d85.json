{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\reactpro1\\\\src\\\\components\\\\Navbar\\\\Navbar.js\";\nimport React from \"react\";\nimport { Navbar, Nav } from \"reactstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./navbar.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { logoutUser } from \"../../store/reducers/actions/authActions\";\nimport confirm from \"reactstrap-confirm\";\n\nconst NavBar = (props, {\n  history\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(state => ({\n    isLoggedIn: state.Auth.isLoggedIn\n  })),\n        isLoggedIn = _useSelector.isLoggedIn;\n\n  console.log(\"top navigation\", isLoggedIn);\n\n  const confirmLogout = () => {\n    let result = confirm({\n      title: React.createElement(React.Fragment, null, \"Content can have \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"JSX\"), \"!\"),\n      message: \"This is a custom message\",\n      confirmText: \"Custom confirm message\",\n      confirmColor: \"primary\",\n      cancelColor: \"link text-danger\"\n    });\n    return result;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"header_navigation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    className: \"navbarLinks\",\n    color: \"light\",\n    light: true,\n    expand: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"AdialaJee\")), React.createElement(Nav, {\n    className: \"ml-auto\",\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"navLinks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(\"li\", {\n    className: \"home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Home\"))), console.log(\"top navi \", isLoggedIn), isLoggedIn || localStorage.getItem(\"_token\") ? React.createElement(React.Fragment, null, React.createElement(\"li\", {\n    className: \"dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Dashboard\")), React.createElement(\"li\", {\n    className: \"logout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/logout\",\n    onClick: confirmLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"LogOut\"))) : React.createElement(React.Fragment, null, React.createElement(\"li\", {\n    className: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Login\")), React.createElement(\"li\", {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Register\")))))));\n};\n\nexport default NavBar;\n\nconst NavLink = ({\n  className,\n  to,\n  name\n}) => {\n  return React.createElement(\"li\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: to,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, name));\n};","map":{"version":3,"sources":["F:/react/reactpro1/src/components/Navbar/Navbar.js"],"names":["React","Navbar","Nav","BrowserRouter","Router","Switch","Route","Link","useSelector","useDispatch","useState","Redirect","logoutUser","confirm","NavBar","props","history","dispatch","state","isLoggedIn","Auth","console","log","confirmLogout","result","title","message","confirmText","confirmColor","cancelColor","localStorage","getItem","NavLink","className","to","name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"reactstrap\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./navbar.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { logoutUser } from \"../../store/reducers/actions/authActions\";\r\nimport confirm from \"reactstrap-confirm\";\r\n\r\nconst NavBar = (props, { history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { isLoggedIn } = useSelector(state => ({\r\n    isLoggedIn: state.Auth.isLoggedIn\r\n  }));\r\n  console.log(\"top navigation\", isLoggedIn);\r\n\r\n  const confirmLogout = () => {\r\n    let result = confirm({\r\n      title: (\r\n        <>\r\n          Content can have <strong>JSX</strong>!\r\n        </>\r\n      ),\r\n      message: \"This is a custom message\",\r\n      confirmText: \"Custom confirm message\",\r\n      confirmColor: \"primary\",\r\n      cancelColor: \"link text-danger\"\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div className=\"header_navigation\">\r\n      <Navbar className=\"navbarLinks\" color=\"light\" light expand=\"md\">\r\n        <h2 className=\"logo\">\r\n          <Link to=\"/\">AdialaJee</Link>\r\n        </h2>\r\n\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <ul className=\"navLinks\">\r\n            <>\r\n              <li className=\"home\">\r\n                <i className=\"icon\"></i>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n            </>\r\n            {console.log(\"top navi \", isLoggedIn)}\r\n            {isLoggedIn || localStorage.getItem(\"_token\") ? (\r\n              <>\r\n                <li className=\"dashboard\">\r\n                  <i className=\"icon\"></i>\r\n                  <Link to=\"/dashboard\">Dashboard</Link>\r\n                </li>\r\n                <li className=\"logout\">\r\n                  <i className=\"icon\"></i>\r\n                  <Link to=\"/logout\" onClick={confirmLogout}>\r\n                    LogOut\r\n                  </Link>\r\n                </li>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <li className=\"login\">\r\n                  <i className=\"icon\"></i>\r\n                  <Link to=\"/login\">Login</Link>\r\n                </li>\r\n                <li className=\"register\">\r\n                  <i className=\"icon\"></i>\r\n                  <Link to=\"/register\">Register</Link>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n\r\nconst NavLink = ({ className, to, name }) => {\r\n  return (\r\n    <li className={className}>\r\n      <i className=\"icon\"></i>\r\n      <Link to={to}>{name}</Link>\r\n    </li>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}