{"ast":null,"code":"import _slicedToArray from \"F:\\\\react\\\\reactpro1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\react\\\\reactpro1\\\\src\\\\views\\\\Login\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Button } from \"reactstrap\";\nimport \"./login.scss\";\nimport InputField from \"../../components/FormFields/InputField.js\";\nimport { loginApi } from \"./loginApi\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authAction, loginUser } from \"../../store/reducers/actions/authActions\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Login = ({\n  history\n}) => {\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        success = _useState6[0],\n        setSuccess = _useState6[1];\n\n  const _useState7 = useState({\n    loading: false\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        spinnerloading = _useState8[0],\n        setSpinnerloading = _useState8[1];\n\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(state => ({\n    isLoggedIn: state.Auth.isLoggedIn\n  })),\n        isLoggedIn = _useSelector.isLoggedIn;\n\n  function triggerSuccess() {\n    toast.success(\"login page ðŸš€\");\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n      password: Yup.string().required(\"Password is required\")\n    }),\n    onSubmit: values => {\n      setError(\"\");\n      setSuccess(\"\");\n      setSpinnerloading({\n        loading: true\n      });\n      loginApi(values.email, values.password).then(res => {\n        setSpinnerloading({\n          loading: false\n        });\n        const userinfo = {\n          email: values.email,\n          password: values.password,\n          token: res.token\n        };\n        dispatch(loginUser(userinfo));\n        localStorage.setItem(\"_token\", JSON.stringify(res.token));\n        setSuccess(res.message);\n        triggerSuccess(); //history.push(\"/Dashboard\");\n        // return <Redirect to={\"/Dashboard\"} />;\n      }).catch(err => {\n        setError(err.response.data.message);\n      });\n    }\n  });\n\n  if (isLoggedIn || localStorage.getItem(\"_token\")) {\n    console.log(\"reditec to this page\");\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  }\n\n  console.log(\"spinnerloading\", spinnerloading);\n  return React.createElement(\"div\", {\n    className: \"login_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: \"login_form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Login Form\"), React.createElement(InputField, {\n    label: \"Email\",\n    name: \"email\",\n    className: formik.errors.email && formik.touched.email && \" is-invalid\",\n    onBlur: formik.handleBlur,\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    errorLabel: formik.errors.email,\n    iconClass: \"email\",\n    placeholder: \"Email \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(InputField, {\n    label: \"Password\",\n    name: \"password\",\n    className: (formik.errors.password && formik.touched.password || error) && \" is-invalid\",\n    onBlur: formik.handleBlur,\n    onChange: formik.handleChange,\n    value: formik.values.password,\n    errorLabel: formik.errors.password || error,\n    iconClass: \"password\",\n    placeholder: \"Password \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    disabled: spinnerloading.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, spinnerloading.loading && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \" Loading\"), !spinnerloading.loading && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \" Login\")), error, success));\n};\n\nexport default Login;","map":{"version":3,"sources":["F:/react/reactpro1/src/views/Login/Login.js"],"names":["React","useState","useFormik","Yup","Button","InputField","loginApi","Redirect","useDispatch","useSelector","authAction","loginUser","ToastContainer","toast","Login","history","email","password","user","setUser","error","setError","success","setSuccess","loading","spinnerloading","setSpinnerloading","dispatch","state","isLoggedIn","Auth","triggerSuccess","formik","initialValues","validationSchema","object","shape","string","required","onSubmit","values","then","res","userinfo","token","localStorage","setItem","JSON","stringify","message","catch","err","response","data","getItem","console","log","handleSubmit","errors","touched","handleBlur","handleChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./login.scss\";\r\nimport InputField from \"../../components/FormFields/InputField.js\";\r\nimport { loginApi } from \"./loginApi\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  authAction,\r\n  loginUser\r\n} from \"../../store/reducers/actions/authActions\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst Login = ({ history }) => {\r\n  const [user, setUser] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [spinnerloading, setSpinnerloading] = useState({ loading: false });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { isLoggedIn } = useSelector(state => ({\r\n    isLoggedIn: state.Auth.isLoggedIn\r\n  }));\r\n\r\n  function triggerSuccess() {\r\n    toast.success(\"login page ðŸš€\");\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\"\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      email: Yup.string()\r\n        .email(\"Email is invalid\")\r\n        .required(\"Email is required\"),\r\n      password: Yup.string().required(\"Password is required\")\r\n    }),\r\n    onSubmit: values => {\r\n      setError(\"\");\r\n      setSuccess(\"\");\r\n      setSpinnerloading({ loading: true });\r\n      loginApi(values.email, values.password)\r\n        .then(res => {\r\n          setSpinnerloading({ loading: false });\r\n          const userinfo = {\r\n            email: values.email,\r\n            password: values.password,\r\n            token: res.token\r\n          };\r\n          dispatch(loginUser(userinfo));\r\n          localStorage.setItem(\"_token\", JSON.stringify(res.token));\r\n          setSuccess(res.message);\r\n          triggerSuccess();\r\n          //history.push(\"/Dashboard\");\r\n          // return <Redirect to={\"/Dashboard\"} />;\r\n        })\r\n        .catch(err => {\r\n          setError(err.response.data.message);\r\n        });\r\n    }\r\n  });\r\n\r\n  if (isLoggedIn || localStorage.getItem(\"_token\")) {\r\n    console.log(\"reditec to this page\");\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n  console.log(\"spinnerloading\", spinnerloading);\r\n  return (\r\n    <div className=\"login_container\">\r\n      <ToastContainer />\r\n      <form onSubmit={formik.handleSubmit} className=\"login_form\">\r\n        <h1>Login Form</h1>\r\n        <InputField\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          className={\r\n            formik.errors.email && formik.touched.email && \" is-invalid\"\r\n          }\r\n          onBlur={formik.handleBlur}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n          errorLabel={formik.errors.email}\r\n          iconClass=\"email\"\r\n          placeholder=\"Email \"\r\n        />\r\n\r\n        <InputField\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          className={\r\n            ((formik.errors.password && formik.touched.password) || error) &&\r\n            \" is-invalid\"\r\n          }\r\n          onBlur={formik.handleBlur}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.password}\r\n          errorLabel={formik.errors.password || error}\r\n          iconClass=\"password\"\r\n          placeholder=\"Password \"\r\n        />\r\n        <Button color=\"primary\" disabled={spinnerloading.loading}>\r\n          {spinnerloading.loading && <div> Loading</div>}\r\n          {!spinnerloading.loading && <div> Login</div>}\r\n        </Button>\r\n        {error}\r\n        {success}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}